spring:
  jpa:
    hibernate:
      ddl-auto: none
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        temp.use_jdbc_metadata_defaults: false
        default_schema: events
    open-in-view: false
  data:
    jpa:
      repositories:
        bootstrap-mode: default
  datasource:
    url: {{ spring.datasource.url }}
    username: {{ spring.datasource.username }}
    password: "${DATABASE_PASSWORD}"
    driver-class-name: com.p6spy.engine.spy.P6SpyDriver
    type: com.zaxxer.hikari.HikariDataSource
    hikari:
      driver-class-name: org.postgresql.Driver
      jdbc-url: {{ liquibase.url }}
      username: {{ spring.datasource.username }}
      password: "${DATABASE_PASSWORD}"
      pool-name: {{ spring.datasource.hikari.pool_name | default('HikariPool') }}
      max-lifetime: {{ spring.datasource.hikari.max_lifetime | default(600000) }}
      connection-timeout: {{ spring.datasource.hikari.connection_timeout | default(15000) }}
      maximum-pool-size: {{ spring.datasource.hikari.maximum_pool_size | default(10) }}
      idle-timeout: {{ spring.datasource.hikari.pool_name | default(200000) }}
      minimum-idle: {{ spring.datasource.hikari.idle_timeout | default(2) }}
      schema: events
  liquibase:
    enabled: false
  groovy:
    template:
      check-template-location: false
  sleuth:
      jdbc:
        p6spy:
          enabled: {{ spring.sleuth.jdbc.p6spy.enabled | default('true') | lower }}
          enable-logging: {{ spring.sleuth.jdbc.p6spy.enable_logging | default('true') | lower }}
          tracing:
            include-parameter-values: {{ spring.sleuth.jdbc.p6spy.tracing.include_parameter_values | default('true') | lower }}
  security:
    qrcheck:
      apikey:
        enabled: {{ spring.qrcheck.api_key.enabled | default('true') | lower }}
        token:
          outgoing: ${DEFAULT_API_KEY_OUTGOING}

  servlet:
    multipart:
      max-file-size: {{ spring.servlet.multipart.max_file_size | default('15MB') }}
      max-request-size: {{ spring.servlet.multipart.max_request_size | default('300MB') }}
  web:
    locale:
      standard: {{ spring.web.locale.standard | default('ru') }}
      supports: {{ spring.web.locale.supports | default(['en']) | join(', ') }}
      encoding: {{ spring.web.locale.standard | default('UTF-8') }}
      message-paths: {{ spring.web.locale.supports | default(['i18n/genres', 'i18n/event_types']) | join(', ') }}

springdoc:
  api-docs:
    path: "/swagger-api"
    enabled: {{ springdoc.api_docs.enabled | default('false') | lower }}
  swagger-ui:
    path: "/"
  info:
    title: Events RESTful API
    description: Сервис управления событиями
    version: {{ lookup('env', 'DOCKER_VERSION') | default('unknown') }}
    licence-url: https://qrchk.ru/licence
    owner-name: QRCheck
    owner-url: www.qrchk.ru
    owner-email: it.support@softdarom.ru

outbound:
  feign:
    content-handler:
      host: "http://content-handler:8000"
    checkman-handler:
      host: "http://checkman-handler:8000"
    orders:
      host: "http://orders:8000"

logging:
  config: config/logback.groovy

logbook:
  strategy: {{ logbook.strategy | default('body-only-if-status-at-least') }}
  minimum-status: {{ logbook.minimum_status | default(200) }}
  format:
    style: {{ logbook.format.style | default('http') }}
  logger:
    name: REST
  exclude: {{ logbook.exclude | default(['/actuator/**', '/v3/api-docs/**', '/swagger-ui/**', '/swagger-api/**', '/']) | join(', ') }}